# U2.W5: The Bakery Challenge (GPS 2.1)

# Your Names
# 1) Daniella Shin
# 2) Rosa Pergams

#You should not change this file. Please paste your solution into the my_solution.rb file.

def bakery_num(people, fav_food)
  servings = {"pie" => 8, "cake" => 6, "cookie" => 1}
  pie_qty = 0
  cake_qty = 0
  cookie_qty = 0

  has_fave = false

  servings.each_key do |k|
    if k == fav_food
        has_fave = true
        fav_food = k
    end
  end

  if has_fave == false
    raise ArgumentError.new("You can't make that food")

  else
    fav_food_qty = servings.values_at(fav_food)[0]
    if people % fav_food_qty == 0 # the food is divisible to the number of people,
      num_of_food = people / fav_food_qty # divide the food.
      return "You need to make #{num_of_food} #{fav_food}(s)."
    else people % fav_food_qty != 0
      while people > 0
          if people / servings["pie"] > 0
              pie_qty = people / servings["pie"]
              people = people % servings["pie"]
          elsif people / servings["cake"] > 0
              cake_qty = people / servings["cake"]
              people = people % servings["cake"]
          else
              cookie_qty = people
              people = 0
          end
      end

    return "You need to make #{pie_qty} pie(s), #{cake_qty} cake(s), and #{cookie_qty} cookie(s)."
    end
  end
end


#-----------------------------------------------------------------------------------------------------
#DRIVER TEST CODE-- DO NOT MODIFY ANYTHING BELOW THIS LINE (except in the section at the bottom)
# These are the tests to ensure it's working.
# These should all print true if the method is working properly.
p bakery_num(24, "cake") == "You need to make 4 cake(s)."
p bakery_num(41, "pie") == "You need to make 5 pie(s), 0 cake(s), and 1 cookie(s)."
p bakery_num(24, "cookie") == "You need to make 24 cookie(s)."
p bakery_num(4, "pie") == "You need to make 0 pie(s), 0 cake(s), and 4 cookie(s)."
p bakery_num(130, "pie") == "You need to make 16 pie(s), 0 cake(s), and 2 cookie(s)."
# p bakery_num(3, "apples") # this will raise an ArgumentError

# You SHOULD change this driver test code. Why? Because it doesn't make sense.
p bakery_num(41, "cake") == "You need to make 5 pie(s), 0 cake(s), and 1 cookie(s)." # WHAAAAAT? I thought I said I wanted cake!



 # U2.W5: The Bakery Challenge (GPS 2.1)

# Your Names
# 1) Daniella Shin
# 2) Rosa Pergams

#You should not change this file. Please paste your solution into the my_solution.rb file.

def bakery_num(people, fav_food)
  servings = {"pie" => 8, "cake" => 6, "cookie" => 1}
  pie_qty = 0
  cake_qty = 0
  cookie_qty = 0

  has_fave = false

  servings.each_key do |k|
    if k == fav_food
        has_fave = true
        fav_food = k
    end
  end

  if has_fave == false
    raise ArgumentError.new("You can't make that food")

  else
    fav_food_qty = servings.values_at(fav_food)[0]
    if people % fav_food_qty == 0 # the food is divisible to the number of people,
      num_of_food = people / fav_food_qty # divide the food.
      return "You need to make #{num_of_food} #{fav_food}(s)."
    else people % fav_food_qty != 0
      while people > 0
          if people / servings["pie"] > 0
              pie_qty = people / servings["pie"]
              people = people % servings["pie"]
          elsif people / servings["cake"] > 0
              cake_qty = people / servings["cake"]
              people = people % servings["cake"]
          else
              cookie_qty = people
              people = 0
          end
      end

    return "You need to make #{pie_qty} pie(s), #{cake_qty} cake(s), and #{cookie_qty} cookie(s)."
    end
  end
end


#-----------------------------------------------------------------------------------------------------
#DRIVER TEST CODE-- DO NOT MODIFY ANYTHING BELOW THIS LINE (except in the section at the bottom)
# These are the tests to ensure it's working.
# These should all print true if the method is working properly.
p bakery_num(24, "cake") == "You need to make 4 cake(s)."
p bakery_num(41, "pie") == "You need to make 5 pie(s), 0 cake(s), and 1 cookie(s)."
p bakery_num(24, "cookie") == "You need to make 24 cookie(s)."
p bakery_num(4, "pie") == "You need to make 0 pie(s), 0 cake(s), and 4 cookie(s)."
p bakery_num(130, "pie") == "You need to make 16 pie(s), 0 cake(s), and 2 cookie(s)."
# p bakery_num(3, "apples") # this will raise an ArgumentError

# You SHOULD change this driver test code. Why? Because it doesn't make sense.
p bakery_num(41, "cake") == "You need to make 5 pie(s), 0 cake(s), and 1 cookie(s)." # WHAAAAAT? I thought I said I wanted cake!



